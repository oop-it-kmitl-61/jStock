/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import util.Transaction;

/**
 *
 * @author Passawit
 */
public class ConfirmSale extends javax.swing.JDialog {
    private Transaction t;

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final boolean RET_CANCEL = false;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final boolean RET_OK = true;

    /**
     * Creates new form Quit
     * @param t
     */
    public ConfirmSale(Transaction t) {
        this.t = t;
        
        initComponents();
        custom();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public boolean getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        description = new javax.swing.JLabel();
        lbID = new javax.swing.JLabel();
        lbDareDes = new javax.swing.JLabel();
        lbTimeDes = new javax.swing.JLabel();
        lbDate = new javax.swing.JLabel();
        lbTime = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        allProducts = new javax.swing.JTable();
        lbTotalDes = new javax.swing.JLabel();
        lbTotal = new javax.swing.JLabel();
        bnCancel = new javax.swing.JButton();
        bnSale = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(332, 326));
        setMinimumSize(new java.awt.Dimension(332, 326));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(332, 326));
        setResizable(false);
        setSize(new java.awt.Dimension(332, 326));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 3));
        bg.setMaximumSize(new java.awt.Dimension(332, 214));
        bg.setMinimumSize(new java.awt.Dimension(332, 214));
        bg.setSize(new java.awt.Dimension(332, 214));

        description.setFont(new java.awt.Font("Comfortaa", 0, 24)); // NOI18N
        description.setText("Recipt");

        lbID.setFont(new java.awt.Font("PT Mono", 0, 24)); // NOI18N
        lbID.setText("#000000000");

        lbDareDes.setFont(new java.awt.Font("Comfortaa", 0, 14)); // NOI18N
        lbDareDes.setText("Date:");

        lbTimeDes.setFont(new java.awt.Font("Comfortaa", 0, 14)); // NOI18N
        lbTimeDes.setText("Time:");

        lbDate.setFont(new java.awt.Font("PT Mono", 0, 14)); // NOI18N
        lbDate.setText("11/11/2018");

        lbTime.setFont(new java.awt.Font("PT Mono", 0, 14)); // NOI18N
        lbTime.setText("11:11");

        allProducts.setFont(new java.awt.Font("PT Mono", 0, 12)); // NOI18N
        allProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "QTY.", "Name", "Price", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allProducts.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(allProducts);

        lbTotalDes.setFont(new java.awt.Font("Comfortaa", 0, 24)); // NOI18N
        lbTotalDes.setText("Total:");

        lbTotal.setFont(new java.awt.Font("PT Mono", 0, 24)); // NOI18N
        lbTotal.setText("0");

        bnCancel.setText("Cancel");
        bnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnCancelActionPerformed(evt);
            }
        });

        bnSale.setText("Sale");
        bnSale.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bnSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnSaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(lbDareDes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbTimeDes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbTime))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(description)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbID))))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addContainerGap(28, Short.MAX_VALUE)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(bnCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bnSale, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(lbTotalDes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30))
        );

        bgLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bnCancel, bnSale});

        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(description)
                    .addComponent(lbID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDareDes)
                    .addComponent(lbDate)
                    .addComponent(lbTimeDes)
                    .addComponent(lbTime))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTotalDes)
                    .addComponent(lbTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bnCancel)
                    .addComponent(bnSale))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bnSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnSaleActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_bnSaleActionPerformed

    private void bnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnCancelActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_bnCancelActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog
    
    private void doClose(boolean retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    
    private void custom() {
        JTableHeader productsHeader = allProducts.getTableHeader();
        productsHeader.setFont(new java.awt.Font("Comfortaa", 0, 12));
        ((DefaultTableCellRenderer) productsHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        productsHeader.setForeground(new java.awt.Color(66, 66, 66));
        
        DefaultTableModel model = (DefaultTableModel) allProducts.getModel();
        t.getProducts().forEach((p) -> {
            model.addRow(new Object[]{p.getQuantity(), p.getProductName(), p.getProductPrice(), p.getAmount()});
        });
        
        lbID.setText("#" + t.getTransactionID());
        lbDate.setText(t.getDay() + "/" + t.getMonth() + "/" + t.getYear());
        lbTime.setText(t.getTime());
        lbTotal.setText(t.getTotal()+"");
    }

    public void init() {

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            ConfirmSale dialog = new ConfirmSale(t);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(false);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allProducts;
    private javax.swing.JPanel bg;
    private javax.swing.JButton bnCancel;
    private javax.swing.JButton bnSale;
    private javax.swing.JLabel description;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDareDes;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbTime;
    private javax.swing.JLabel lbTimeDes;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JLabel lbTotalDes;
    // End of variables declaration//GEN-END:variables

    private boolean returnStatus = RET_CANCEL;
}
